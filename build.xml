<?xml version="1.0" encoding="UTF-8"?>
<project default="xar" name="sarit-pm"
	 xmlns:ac="antlib:net.sf.antcontrib">
  <property file="build.properties"/>
  <xmlproperty file="expath-pkg.xml"/>
  <property name="server.dir" value="../exist"/>
  <property name="project.version" value="${package(version)}"/>
  <property name="project.app" value="sarit-pm"/>
  <property name="build.dir" value="build"/>
  <property name="epub.dir" value="resources/epubs"/>
  <property name="pdf.dir" value="resources/pdfs"/>
  <property name="tex.dir" value="resources/texs"/>
  <property name="SARIT-corpus.dir" value="SARIT-corpus"/>
  <property name="current-corpus.dir" value="sarit-data"/>
  <!-- for the encoding guidelines: these go in their own directory,
       independent of the web app -->
  <property name="sarit-docs.dir" value="sarit-docs"/>
  <!-- see https://ant.apache.org/manual/Tasks/xmlproperty.html for
       this -->
  <xmlproperty file="${SARIT-corpus.dir}/saritcorpus.xml" semanticAttributes="true"/>

  
  <path id="classpath.core">
    <fileset dir="${server.dir}/lib/core">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${server.dir}/exist.jar"/>
    <pathelement path="${server.dir}/exist-optional.jar"/>
  </path>

  <typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">
    <classpath refid="classpath.core"/>
  </typedef>
  
  <target name="xar" depends="make-corpus,make-docs">
    <mkdir dir="${build.dir}"/>
    <echo message="Calling npm start..."/>
    <exec executable="${npm}" outputproperty="npm.output">
      <arg line="start"/>
    </exec>
    <echo message="${npm.output}"/>
    <echo message="Creating xar package..."/>
    <zip basedir="."
	 destfile="${build.dir}/${project.app}-${project.version}.xar" excludes="${build.dir}/* node_modules/** package.json gruntfile.js .* ${SARIT-corpus.dir}/**"/>
  </target>

  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${current-corpus.dir}" />
  </target>

  <target name="make-corpus">
    <mkdir dir="${current-corpus.dir}" />
    <echo message="Copying included documents from ./${SARIT-corpus.dir} to ./${current-corpus.dir}"/>
    <echo>Found these xml docs: ${teiCorpus.xi:include.href}</echo>
    <ac:for list="${teiCorpus.xi:include.href}" param="doc">
      <sequential>
	<echo>Including ${SARIT-corpus.dir}/@{doc}</echo>
	<copy overwrite="true" todir="${current-corpus.dir}" file="${SARIT-corpus.dir}/@{doc}"/>
      </sequential>
    </ac:for>
    <echo>Including ${SARIT-corpus.dir}/saritcorpus.xml</echo>
    <copy overwrite="true" todir="${current-corpus.dir}" file="${SARIT-corpus.dir}/saritcorpus.xml"/>
  </target>

  <target name="make-docs">
    <mkdir dir="${sarit-docs.dir}" />
    <echo message="Copying docs from ./${SARIT-corpus.dir} to ./${sarit-docs.dir}"/>
    <copy overwrite="true" todir="${sarit-docs.dir}" file="${SARIT-corpus.dir}/schemas/odd/sarit-guidelines-full.xml"/>
    <copy overwrite="true" todir="${sarit-docs.dir}" file="${SARIT-corpus.dir}/schemas/odd/sarit-guidelines.xml"/>
  </target>

  <target name="uninstall">
    <echo>Uninstalling ${project.app}</echo>
    <xdb:xquery  xmlns:xdb="http://exist-db.org/ant"
		 uri="xmldb:exist://localhost:8080/exist/xmlrpc/db"
		 user="${admin}"
		 password="${password}">
      declare namespace repo="http://exist-db.org/xquery/repo";
      repo:undeploy("http://sarit.indology.info/pm"),
      repo:remove("http://sarit.indology.info/pm")
    </xdb:xquery>
    <echo>Uninstalled ${project.app}</echo>
  </target>

  <!-- install docs and xquery scripts temporarily -->
  <target name="install">
    <!-- upload xar to database -->
    <xdb:store xmlns:xdb="http://exist-db.org/ant"
	       uri="xmldb:exist://localhost:8080/exist/xmlrpc/db"
	       user="${admin}"
	       password="${password}"
	       srcfile="${build.dir}/${project.app}-${project.version}.xar"
	       />
    <echo>Installing ${project.app}-${project.version}.xar</echo>
    <xdb:xquery  xmlns:xdb="http://exist-db.org/ant"
		 uri="xmldb:exist://localhost:8080/exist/xmlrpc/db"
		 user="${admin}"
		 password="${password}">
      <variable name="xar" value="${project.app}-${project.version}.xar" />
      declare namespace repo="http://exist-db.org/xquery/repo";
      repo:install-and-deploy-from-db($xar)
    </xdb:xquery>
    <!-- and remove xar again -->
    <xdb:remove xmlns:xdb="http://exist-db.org/ant"
		user="${admin}"
		password="${password}"
		uri="xmldb:exist://localhost:8080/exist/xmlrpc/db"
		collection="${project.app}-${project.version}.xar"/>
  </target>

  <!-- get a single epub -->
  <target name="epub">
    <basename property="epub" file="${doc}" suffix=".xml"/>
    <echo>Getting epub for ${SARIT-corpus.dir}/${epub}</echo>
    <get dest="${epub.dir}/${epub}.epub"
	 src="${develserver}/sarit-pm/works/${epub}.epub"
	 />
  </target>
  
  <target name="make-epubs">
    <mkdir dir="${epub.dir}"/>
    <echo message="Generating epubs ..."/>
    <ac:for list="${teiCorpus.xi:include.href}" param="doc">
      <sequential>
	<antcall target="epub">
	  <param name="doc" value="@{doc}"/>
	</antcall>
      </sequential>
    </ac:for>
  </target>

  <!-- get a single tex file -->
  <target name="tex">
    <basename property="tex" file="${doc}" suffix=".xml"/>
    <echo>Getting tex for ${SARIT-corpus.dir}/${epub}</echo>
    <get dest="${tex.dir}/${tex}.tex"
	 src="${develserver}/sarit-pm/works/${tex}.tex?source=yes"
	 />
  </target>
  
  <target name="make-texs">
    <mkdir dir="${tex.dir}"/>
    <echo message="Generating tex files ..."/>
    <ac:for list="${teiCorpus.xi:include.href}" param="doc">
      <sequential>
	<antcall target="tex">
	  <param name="doc" value="@{doc}"/>
	</antcall>
      </sequential>
    </ac:for>
  </target>

  <!-- PDF generation is currently somewhat broken in sarit-pm.  We just -->
  <!-- include the pdf files found in sarit-pm/resources/pdf/. -->
  
  <!-- get a single pdf file -->
  <!-- <target name="pdf"> -->
  <!--   <basename property="pdf" file="${doc}" suffix=".xml"/> -->
  <!--   <echo>Getting pdf for ${SARIT-corpus.dir}/${epub}</echo> -->
  <!--   <exec -->
  <!-- 	/> -->
  <!-- </target> -->
  
  <!-- <target name="make-pdfs"> -->
  <!--   <mkdir dir="${pdf.dir}"/> -->
  <!--   <echo message="Generating pdf files ..."/> -->
  <!--   <ac:for list="${teiCorpus.xi:include.href}" param="doc"> -->
  <!--     <sequential> -->
  <!-- 	<antcall target="pdf"> -->
  <!-- 	  <param name="doc" value="@{doc}"/> -->
  <!-- 	</antcall> -->
  <!--     </sequential> -->
  <!--   </ac:for> -->
  <!-- </target> -->

  <!-- rebuild xar archive after downloading static stuff -->
  <target name="xar-all-inclusive">
    <echo>Generating preliminary xar</echo>
    <antcall target="xar"/>
    <echo>Done generating preliminary xar</echo>
    <echo>Installing preliminary xar</echo>
    <antcall target="install"/>
    <echo>Done installing preliminary xar</echo>
    <echo>Caching epubs</echo>
    <antcall target="make-epubs"/>
    <echo>Done caching epubs</echo>
    <echo>Copying SARIT docs</echo>
    <antcall target="make-docs"/>
    <echo>Copied SARIT docs</echo>
    <echo>Generating final xar</echo>
    <antcall target="xar"/>
    <echo>Done generating final xar</echo>
  </target>
  
</project>
